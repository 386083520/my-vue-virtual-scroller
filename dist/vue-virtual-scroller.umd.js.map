{"version":3,"file":"vue-virtual-scroller.umd.js","sources":["../src/components/common.js","../src/config.js","../src/components/RecycleScroller.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/index.js"],"sourcesContent":["export const props = {\r\n    items: {\r\n        type: Array,\r\n        required: true,\r\n    },\r\n    keyField: {\r\n        type: String,\r\n        default: 'id',\r\n    }\r\n}\r\n\r\nexport function simpleArray () {\r\n    return this.items.length && typeof this.items[0] !== 'object'\r\n}\r\n","export default {\r\n    itemsLimit: 1000\r\n}\r\n","<template>\r\n    <div class=\"vue-recycle-scroller\">\r\n        <div class=\"vue-recycle-scroller__slot\">\r\n            <slot\r\n                    name=\"before\"\r\n            />\r\n        </div>\r\n        <div class=\"vue-recycle-scroller__item-wrapper\">\r\n            <div\r\n                v-for=\"(view, index) of pool\"\r\n                :key=\"index\"\r\n                class=\"vue-recycle-scroller__item-view\">\r\n                <slot :item=\"view.item\"></slot>\r\n            </div>\r\n        </div>\r\n        <div class=\"vue-recycle-scroller__slot\">\r\n            <slot\r\n                    name=\"after\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {props, simpleArray} from \"./common\";\r\n    import config from '../config'\r\n    export default {\r\n        name: \"RecycleScroller\",\r\n        props: {\r\n            ...props,\r\n            buffer: {\r\n                type: Number,\r\n                default: 200,\r\n            },\r\n            itemSize: {\r\n                type: Number,\r\n                default: null,\r\n            },\r\n            typeField: {\r\n                type: String,\r\n                default: 'type',\r\n            },\r\n            emitUpdate: {\r\n                type: Boolean,\r\n                default: false,\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                pool: [],\r\n                totalSize: 0\r\n            }\r\n        },\r\n        computed: {\r\n            simpleArray\r\n        },\r\n        created () {\r\n            this.$_startIndex = 0\r\n            this.$_endIndex = 0\r\n            this.$_views = new Map()\r\n            this.$_unusedViews = new Map()\r\n        },\r\n        mounted () {\r\n            this.$nextTick(() => {\r\n                this.updateVisibleItems(true)\r\n            })\r\n        },\r\n        methods: {\r\n            addView (pool, index, item, key, type) {\r\n                const view = {\r\n                    item,\r\n                    position: 0,\r\n                }\r\n                pool.push(view)\r\n                return view\r\n            },\r\n            updateVisibleItems (checkItem, checkPositionDiff = false) {\r\n                const views = this.$_views\r\n                const unusedViews = this.$_unusedViews\r\n                const keyField = this.simpleArray ? null : this.keyField\r\n                const itemSize = this.itemSize\r\n                const items = this.items\r\n                const count = items.length\r\n                const pool = this.pool\r\n                let startIndex, endIndex\r\n                let totalSize\r\n                const typeField = this.typeField\r\n                if (!count) {\r\n                    startIndex = endIndex = totalSize = 0\r\n                } else {\r\n                    const scroll = this.getScroll()\r\n                    if (checkPositionDiff) {\r\n\r\n                    }\r\n                    this.$_lastUpdateScrollPosition = scroll.start\r\n                    const buffer = this.buffer\r\n                    scroll.start -= buffer  // 300 -> 100\r\n                    scroll.end += buffer // 900 -> 1100\r\n                    if (itemSize === null) {\r\n                        // TODO\r\n                    }else {\r\n                        startIndex = ~~(scroll.start / itemSize) // 310/50 -> 6\r\n                        endIndex = Math.ceil(scroll.end / itemSize) // 1020/50 -> 21\r\n\r\n                        startIndex < 0 && (startIndex = 0)\r\n                        endIndex > count && (endIndex = count)\r\n\r\n                        totalSize = count * itemSize\r\n                    }\r\n                    console.log('gsdupdateVisibleItems', totalSize, scroll.start, scroll.end, scroll, startIndex, endIndex)\r\n                }\r\n                if (endIndex - startIndex > config.itemsLimit) {\r\n                    this.itemsLimitError()\r\n                }\r\n                this.totalSize = totalSize\r\n\r\n                let view\r\n                const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\r\n                if (this.$_continuous !== continuous) {\r\n                    console.log('gsdcontinuous',this.$_continuous, continuous)\r\n                    if (continuous) {\r\n                        views.clear()\r\n                        unusedViews.clear()\r\n                        for (let i = 0, l = pool.length; i < l; i++) {\r\n                        }\r\n                    }\r\n                    this.$_continuous = continuous\r\n                } else if (continuous) {\r\n\r\n                }\r\n                const unusedIndex = continuous ? null : new Map()\r\n                let item, type, unusedPool\r\n                for (let i = startIndex; i < endIndex; i++) {\r\n                    item = items[i]\r\n                    const key = keyField ? item[keyField] : item\r\n                    if (key == null) {\r\n                        throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\r\n                    }\r\n                    view = views.get(key)\r\n                    if (!view) {\r\n                        type = item[typeField]\r\n                        unusedPool = unusedViews.get(type)\r\n                        if (continuous) {\r\n                            if (unusedPool && unusedPool.length) {\r\n\r\n                            } else {\r\n                                view = this.addView(pool, i, item, key, type)\r\n                            }\r\n                        } else {\r\n                        }\r\n                        views.set(key, view)\r\n                    } else {\r\n                    }\r\n                    if (itemSize === null) {\r\n\r\n                    } else {\r\n                        view.position = i * itemSize\r\n                    }\r\n                }\r\n                this.$_startIndex = startIndex\r\n                this.$_endIndex = endIndex\r\n                console.log('gsdpool', pool)\r\n                if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\r\n                return {\r\n                    continuous,\r\n                }\r\n            },\r\n            itemsLimitError () {\r\n                throw new Error('Rendered items limit reached')\r\n            },\r\n            getScroll () {\r\n                const { $el: el } = this\r\n                let scrollState\r\n                scrollState = {\r\n                    start: el.scrollTop, // scrollTop 值是这个元素的内容顶部（卷起来的）到它的视口可见内容（的顶部）的距离的度量\r\n                    end: el.scrollTop + el.clientHeight, // clientHeight 它是元素内部的高度(单位像素)，包含内边距，但不包括水平滚动条、边框和外边距\r\n                }\r\n                console.log('gsdscrollState', scrollState)\r\n                return scrollState\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","import RecycleScroller from './components/RecycleScroller.vue'\r\n\r\nfunction registerComponents (Vue, prefix) {\r\n    Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\r\n    Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\r\n}\r\n\r\nconst plugin = {\r\n    install (Vue, options) {\r\n        const finalOptions = Object.assign({}, {\r\n            installComponents: true,\r\n            componentsPrefix: '',\r\n        }, options)\r\n        if (finalOptions.installComponents) {\r\n            registerComponents(Vue, finalOptions.componentsPrefix)\r\n        }\r\n    }\r\n}\r\nexport default plugin\r\n\r\n"],"names":["props","items","type","Array","required","keyField","String","default","simpleArray","length","itemsLimit","registerComponents","Vue","prefix","component","RecycleScroller","plugin","install","options","finalOptions","Object","assign","installComponents","componentsPrefix"],"mappings":"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"}